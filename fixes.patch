Subject: [PATCH] fixes
---
Index: src/main/java/telran/project/gardenshop/controller/FavoriteController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/controller/FavoriteController.java b/src/main/java/telran/project/gardenshop/controller/FavoriteController.java
--- a/src/main/java/telran/project/gardenshop/controller/FavoriteController.java	(revision 7506b4a2d61c8e259528c374d6aa3a686a3ae1f7)
+++ b/src/main/java/telran/project/gardenshop/controller/FavoriteController.java	(date 1752054146833)
@@ -26,6 +26,7 @@
 public class FavoriteController {
 
     private final FavoriteService favoriteService;
+
     private final FavoriteMapper favoriteMapper;
 
     @Operation(summary = "Add product to user's favorites")
Index: src/main/java/telran/project/gardenshop/controller/ProductController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/controller/ProductController.java b/src/main/java/telran/project/gardenshop/controller/ProductController.java
--- a/src/main/java/telran/project/gardenshop/controller/ProductController.java	(revision 7506b4a2d61c8e259528c374d6aa3a686a3ae1f7)
+++ b/src/main/java/telran/project/gardenshop/controller/ProductController.java	(date 1752055642971)
@@ -22,6 +22,7 @@
 public class ProductController {
 
     private final ProductService productService;
+
     private final ProductMapper productMapper;
 
     @PostMapping
@@ -54,7 +55,7 @@
     public ResponseEntity<ProductResponseDto> update(@PathVariable Long id,
                                                      @Valid @RequestBody ProductRequestDto dto) {
         Product entity = productMapper.toEntity(dto);
-        entity.setId(id);
+      //  entity.setId(id);
         Product updated = productService.updateProduct(id, entity);
         return ResponseEntity.ok(productMapper.toDto(updated));
     }
Index: src/main/java/telran/project/gardenshop/configuration/SwaggerConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/configuration/SwaggerConfig.java b/src/main/java/telran/project/gardenshop/configuration/SwaggerConfig.java
--- a/src/main/java/telran/project/gardenshop/configuration/SwaggerConfig.java	(revision 7506b4a2d61c8e259528c374d6aa3a686a3ae1f7)
+++ b/src/main/java/telran/project/gardenshop/configuration/SwaggerConfig.java	(date 1752053985870)
@@ -1,4 +1,5 @@
 package telran.project.gardenshop.configuration;
+
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
 import io.swagger.v3.oas.models.OpenAPI;
Index: src/main/java/telran/project/gardenshop/service/CategoryServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/service/CategoryServiceImpl.java b/src/main/java/telran/project/gardenshop/service/CategoryServiceImpl.java
--- a/src/main/java/telran/project/gardenshop/service/CategoryServiceImpl.java	(revision 7506b4a2d61c8e259528c374d6aa3a686a3ae1f7)
+++ b/src/main/java/telran/project/gardenshop/service/CategoryServiceImpl.java	(date 1752055642992)
@@ -15,6 +15,7 @@
 public class CategoryServiceImpl implements CategoryService {
 
     private final CategoryRepository categoryRepository;
+
     private final CategoryMapper categoryMapper;
 
     @Override
@@ -24,8 +25,7 @@
 
     @Override
     public Category updateCategory(Long id, CategoryEditDto dto) {
-        Category category = categoryRepository.findById(id)
-                .orElseThrow(() -> new CategoryNotFoundException(id));
+        Category category = getCategoryById(id);
         categoryMapper.updateEntityFromDto(dto, category);
         return categoryRepository.save(category);
     }
@@ -43,8 +43,6 @@
 
     @Override
     public void deleteCategory(Long id) {
-        Category category = categoryRepository.findById(id)
-                .orElseThrow(() -> new CategoryNotFoundException(id));
-        categoryRepository.delete(category);
+        categoryRepository.delete(getCategoryById(id));
     }
 }
\ No newline at end of file
Index: src/main/java/telran/project/gardenshop/service/CategoryService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/service/CategoryService.java b/src/main/java/telran/project/gardenshop/service/CategoryService.java
--- a/src/main/java/telran/project/gardenshop/service/CategoryService.java	(revision 7506b4a2d61c8e259528c374d6aa3a686a3ae1f7)
+++ b/src/main/java/telran/project/gardenshop/service/CategoryService.java	(date 1752055642924)
@@ -6,9 +6,14 @@
 import java.util.List;
 
 public interface CategoryService {
+
     Category createCategory(Category category);
+
     Category updateCategory(Long id, CategoryEditDto dto);
+
     Category getCategoryById(Long id);
+
     List<Category> getAllCategories();
+
     void deleteCategory(Long id);
 }
\ No newline at end of file
Index: src/main/resources/db/changelog/db.changelog-1.1-data.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/db/changelog/db.changelog-1.1-data.xml b/src/main/resources/db/changelog/db.changelog-1.1-data.xml
--- a/src/main/resources/db/changelog/db.changelog-1.1-data.xml	(revision 7506b4a2d61c8e259528c374d6aa3a686a3ae1f7)
+++ b/src/main/resources/db/changelog/db.changelog-1.1-data.xml	(date 1752055642929)
@@ -5,7 +5,7 @@
         xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
         https://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-latest.xsd">
 
-    <changeSet id="002-insert-initial-data" author="white" runAlways="true">
+    <changeSet id="001-insert-initial-data" author="white">
 
         <!-- Users -->
         <insert tableName="users">
Index: src/main/java/telran/project/gardenshop/service/UserServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/service/UserServiceImpl.java b/src/main/java/telran/project/gardenshop/service/UserServiceImpl.java
--- a/src/main/java/telran/project/gardenshop/service/UserServiceImpl.java	(revision 7506b4a2d61c8e259528c374d6aa3a686a3ae1f7)
+++ b/src/main/java/telran/project/gardenshop/service/UserServiceImpl.java	(date 1752055642999)
@@ -16,6 +16,7 @@
 public class UserServiceImpl implements UserService {
 
     private final UserRepository userRepository;
+
     private final PasswordEncoder passwordEncoder;
 
     @Override
@@ -28,7 +29,8 @@
 
     @Override
     public User getUserById(Long id) {
-        return userRepository.findById(id).orElseThrow(() -> new UserNotFoundException(id));
+        return userRepository.findById(id)
+                .orElseThrow(() -> new UserNotFoundException("User with id " + id + " not found"));
     }
 
     @Override
@@ -38,7 +40,7 @@
 
     @Override
     public User updateUser(Long id, User updated) {
-        User user = userRepository.findById(id).orElseThrow(() -> new UserNotFoundException(id));
+        User user = getUserById(id);
 
         if (!user.getEmail().equals(updated.getEmail())) {
             emailCheck(updated.getEmail());
@@ -52,7 +54,7 @@
 
     @Override
     public void deleteUser(Long id) {
-        User user = userRepository.findById(id).orElseThrow(() -> new UserNotFoundException(id));
+        User user = getUserById(id);
         userRepository.delete(user);
     }
 
Index: src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/src/main/resources/application.properties b/src/main/resources/application.properties
--- a/src/main/resources/application.properties	(revision 7506b4a2d61c8e259528c374d6aa3a686a3ae1f7)
+++ b/src/main/resources/application.properties	(date 1752056355142)
@@ -1,6 +1,7 @@
 # --- Server Settings ---
 server.port=8082
 spring.application.name=gardenShop
+#spring.profiles.active=dev
 
 # --- PostgreSQL Database Settings ---
 spring.datasource.url=jdbc:postgresql://localhost:5432/gardenshop
Index: src/main/java/telran/project/gardenshop/service/UserService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/service/UserService.java b/src/main/java/telran/project/gardenshop/service/UserService.java
--- a/src/main/java/telran/project/gardenshop/service/UserService.java	(revision 7506b4a2d61c8e259528c374d6aa3a686a3ae1f7)
+++ b/src/main/java/telran/project/gardenshop/service/UserService.java	(date 1752055642910)
@@ -1,12 +1,18 @@
 package telran.project.gardenshop.service;
 
 import telran.project.gardenshop.entity.User;
+
 import java.util.List;
 
 public interface UserService {
+
     User createUser(User user);
+
     User getUserById(Long id);
+
     List<User> getAllUsers();
+
     User updateUser(Long id, User updated);
+
     void deleteUser(Long id);
 }
\ No newline at end of file
Index: src/main/resources/db/changelog/db.changelog-1.0-init.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/db/changelog/db.changelog-1.0-init.xml b/src/main/resources/db/changelog/db.changelog-1.0-init.xml
--- a/src/main/resources/db/changelog/db.changelog-1.0-init.xml	(revision 7506b4a2d61c8e259528c374d6aa3a686a3ae1f7)
+++ b/src/main/resources/db/changelog/db.changelog-1.0-init.xml	(date 1752055643012)
@@ -5,14 +5,8 @@
         xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
         https://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-latest.xsd">
 
-    <changeSet id="001" author="anna">
-
-        <!-- Users -->
-        <preConditions onFail="MARK_RAN">
-            <not>
-                <tableExists tableName="users"/>
-            </not>
-        </preConditions>
+    <changeSet id="001-create-table-users" author="anna">
+        <comment>Create table users</comment>
         <createTable tableName="users">
             <column name="id" type="SERIAL">
                 <constraints primaryKey="true"/>
@@ -31,26 +25,22 @@
                 <constraints nullable="false"/>
             </column>
         </createTable>
+    </changeSet>
+
+    <changeSet id="002-create-table-category" author="anna">
+        <comment>Create table category</comment>
 
         <!-- Categories -->
-        <preConditions onFail="MARK_RAN">
-            <not>
-                <tableExists tableName="categories"/>
-            </not>
-        </preConditions>
         <createTable tableName="categories">
             <column name="id" type="SERIAL">
                 <constraints primaryKey="true"/>
             </column>
             <column name="name" type="VARCHAR(255)"/>
         </createTable>
+    </changeSet>
 
-        <!-- Products -->
-        <preConditions onFail="MARK_RAN">
-            <not>
-                <tableExists tableName="products"/>
-            </not>
-        </preConditions>
+    <changeSet id="003-create-table-products" author="anna">
+        <comment>Create table product</comment>
         <createTable tableName="products">
             <column name="id" type="SERIAL">
                 <constraints primaryKey="true"/>
@@ -67,13 +57,10 @@
                 <constraints nullable="false"/>
             </column>
         </createTable>
+    </changeSet>
 
-        <!-- Favorites -->
-        <preConditions onFail="MARK_RAN">
-            <not>
-                <tableExists tableName="favorites"/>
-            </not>
-        </preConditions>
+    <changeSet id="004-create-table-favorites" author="anna">
+        <comment>Create table favorites</comment>
         <createTable tableName="favorites">
             <column name="id" type="SERIAL">
                 <constraints primaryKey="true"/>
@@ -86,16 +73,14 @@
             </column>
             <column name="created_at" type="TIMESTAMP"/>
         </createTable>
+    </changeSet>
 
-        <!-- Constraints -->
-        <preConditions onFail="MARK_RAN">
-            <not>
-                <uniqueConstraintExists tableName="favorites" constraintName="uq_favorites_user_product"/>
-            </not>
-        </preConditions>
+    <!-- Constraints -->
+    <changeSet id="005-add-fk-favorite" author="anna">
         <addUniqueConstraint tableName="favorites"
                              columnNames="user_id, product_id"
                              constraintName="uq_favorites_user_product"/>
+
     </changeSet>
 
 </databaseChangeLog>
\ No newline at end of file
Index: HELP.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/HELP.md b/HELP.md
--- a/HELP.md	(revision 7506b4a2d61c8e259528c374d6aa3a686a3ae1f7)
+++ b/HELP.md	(date 1752056355133)
@@ -26,3 +26,5 @@
 To prevent this, the project POM contains empty overrides for these elements.
 If you manually switch to a different parent and actually want the inheritance, you need to remove those overrides.
 
+drop database gardenshop;
+create database gardenshop;
\ No newline at end of file
Index: src/main/java/telran/project/gardenshop/exception/UserAlreadyExistsException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/exception/UserAlreadyExistsException.java b/src/main/java/telran/project/gardenshop/exception/UserAlreadyExistsException.java
--- a/src/main/java/telran/project/gardenshop/exception/UserAlreadyExistsException.java	(revision 7506b4a2d61c8e259528c374d6aa3a686a3ae1f7)
+++ b/src/main/java/telran/project/gardenshop/exception/UserAlreadyExistsException.java	(date 1752055642901)
@@ -1,6 +1,7 @@
 package telran.project.gardenshop.exception;
 
 public class UserAlreadyExistsException extends RuntimeException {
+
     public UserAlreadyExistsException(String username) {
         super("User with username '" + username + "' already exists");
     }
Index: src/main/java/telran/project/gardenshop/exception/FavoriteAlreadyExistsException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/exception/FavoriteAlreadyExistsException.java b/src/main/java/telran/project/gardenshop/exception/FavoriteAlreadyExistsException.java
--- a/src/main/java/telran/project/gardenshop/exception/FavoriteAlreadyExistsException.java	(revision 7506b4a2d61c8e259528c374d6aa3a686a3ae1f7)
+++ b/src/main/java/telran/project/gardenshop/exception/FavoriteAlreadyExistsException.java	(date 1752055642978)
@@ -1,6 +1,7 @@
 package telran.project.gardenshop.exception;
 
 public class FavoriteAlreadyExistsException extends RuntimeException {
+
     public FavoriteAlreadyExistsException(Long userId, Long productId) {
         super("Favorite for user " + userId + " and product " + productId + " already exists");
     }
Index: src/main/java/telran/project/gardenshop/service/ProductServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/service/ProductServiceImpl.java b/src/main/java/telran/project/gardenshop/service/ProductServiceImpl.java
--- a/src/main/java/telran/project/gardenshop/service/ProductServiceImpl.java	(revision 7506b4a2d61c8e259528c374d6aa3a686a3ae1f7)
+++ b/src/main/java/telran/project/gardenshop/service/ProductServiceImpl.java	(date 1752055642986)
@@ -18,11 +18,12 @@
 public class ProductServiceImpl implements ProductService {
 
     private final ProductRepository productRepository;
-    private final CategoryRepository categoryRepository;
+
+    private final CategoryService categoryService;
 
     @Override
     public Product createProduct(Product product) {
-        Category category = getCategoryByIdOrThrow(product.getCategory().getId());
+        Category category = categoryService.getCategoryById(product.getCategory().getId());
         product.setCategory(category);
         return productRepository.save(product);
     }
@@ -41,7 +42,7 @@
     @Override
     public Product updateProduct(Long id, Product updatedProduct) {
         Product product = getProductById(id);
-        Category category = getCategoryByIdOrThrow(updatedProduct.getCategory().getId());
+        Category category = categoryService.getCategoryById(updatedProduct.getCategory().getId());
 
         product.setName(updatedProduct.getName());
         product.setDescription(updatedProduct.getDescription());
@@ -53,8 +54,7 @@
     }
     @Override
     public Product updateProduct(Long id, ProductEditDto dto) {
-        Product product = productRepository.findById(id)
-                .orElseThrow(() -> new EntityNotFoundException("Product not found with id " + id));
+        Product product = getProductById(id);
 
         product.setName(dto.getTitle());       // может быть null — сбросится
         product.setDescription(dto.getDescription());
@@ -70,9 +70,4 @@
         Product product = getProductById(id);
         productRepository.delete(product);
     }
-
-    private Category getCategoryByIdOrThrow(Long categoryId) {
-        return categoryRepository.findById(categoryId)
-                .orElseThrow(() -> new CategoryNotFoundException(categoryId));
-    }
 }
\ No newline at end of file
Index: src/main/java/telran/project/gardenshop/controller/CategoryController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/controller/CategoryController.java b/src/main/java/telran/project/gardenshop/controller/CategoryController.java
--- a/src/main/java/telran/project/gardenshop/controller/CategoryController.java	(revision 7506b4a2d61c8e259528c374d6aa3a686a3ae1f7)
+++ b/src/main/java/telran/project/gardenshop/controller/CategoryController.java	(date 1752054146820)
@@ -4,6 +4,7 @@
 import io.swagger.v3.oas.annotations.security.SecurityRequirement;
 import jakarta.validation.Valid;
 import lombok.RequiredArgsConstructor;
+import org.springframework.http.HttpStatus;
 import org.springframework.http.ResponseEntity;
 import org.springframework.web.bind.annotation.*;
 import telran.project.gardenshop.dto.CategoryEditDto;
@@ -22,6 +23,7 @@
 public class CategoryController {
 
     private final CategoryService categoryService;
+
     private final CategoryMapper categoryMapper;
 
     @PostMapping
@@ -29,7 +31,7 @@
     public ResponseEntity<CategoryResponseDto> create(@Valid @RequestBody CategoryRequestDto dto) {
         Category category = categoryMapper.toEntity(dto);
         Category saved = categoryService.createCategory(category);
-        return ResponseEntity.status(201).body(categoryMapper.toDto(saved));
+        return ResponseEntity.status(HttpStatus.CREATED).body(categoryMapper.toDto(saved));
     }
 
     @GetMapping("/{id}")
Index: src/main/java/telran/project/gardenshop/repository/FavoriteRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/repository/FavoriteRepository.java b/src/main/java/telran/project/gardenshop/repository/FavoriteRepository.java
--- a/src/main/java/telran/project/gardenshop/repository/FavoriteRepository.java	(revision 7506b4a2d61c8e259528c374d6aa3a686a3ae1f7)
+++ b/src/main/java/telran/project/gardenshop/repository/FavoriteRepository.java	(date 1752055643009)
@@ -7,8 +7,12 @@
 import java.util.Optional;
 
 public interface FavoriteRepository extends JpaRepository<Favorite, Long> {
+
     Optional<Favorite> findByUserIdAndProductId(Long userId, Long productId);
+
     List<Favorite> findAllByUserId(Long userId);
+
     void deleteByUserIdAndProductId(Long userId, Long productId);
+
     boolean existsByUserIdAndProductId(Long userId, Long productId);
 }
\ No newline at end of file
Index: src/main/java/telran/project/gardenshop/service/FavoriteServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/service/FavoriteServiceImpl.java b/src/main/java/telran/project/gardenshop/service/FavoriteServiceImpl.java
--- a/src/main/java/telran/project/gardenshop/service/FavoriteServiceImpl.java	(revision 7506b4a2d61c8e259528c374d6aa3a686a3ae1f7)
+++ b/src/main/java/telran/project/gardenshop/service/FavoriteServiceImpl.java	(date 1752055643016)
@@ -5,6 +5,7 @@
 import telran.project.gardenshop.entity.Favorite;
 import telran.project.gardenshop.entity.Product;
 import telran.project.gardenshop.entity.User;
+import telran.project.gardenshop.exception.FavoriteAlreadyExistsException;
 import telran.project.gardenshop.exception.FavoriteNotFoundException;
 import telran.project.gardenshop.exception.ProductNotFoundException;
 import telran.project.gardenshop.exception.UserNotFoundException;
@@ -19,18 +20,19 @@
 public class FavoriteServiceImpl implements FavoriteService {
 
     private final FavoriteRepository favoriteRepository;
-    private final UserRepository userRepository;
-    private final ProductRepository productRepository;
+
+    private final UserService userService;
+
+    private final ProductService productService;
 
     @Override
     public Favorite addToFavorites(Favorite favorite) {
-        Long userId = favorite.getUser().getId();
-        Long productId = favorite.getProduct().getId();
+        User user = userService.getUserById(favorite.getUser().getId());
+        Product product = productService.getProductById(favorite.getProduct().getId());
 
-        User user = userRepository.findById(userId)
-                .orElseThrow(() -> new UserNotFoundException(userId));
-        Product product = productRepository.findById(productId)
-                .orElseThrow(() -> new ProductNotFoundException(productId));
+        if(favoriteRepository.findByUserIdAndProductId(user.getId(), product.getId()).isPresent()) {
+            throw new FavoriteAlreadyExistsException(user.getId(), product.getId());
+        }
 
         favorite.setUser(user);
         favorite.setProduct(product);
Index: src/main/java/telran/project/gardenshop/service/ProductService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/service/ProductService.java b/src/main/java/telran/project/gardenshop/service/ProductService.java
--- a/src/main/java/telran/project/gardenshop/service/ProductService.java	(revision 7506b4a2d61c8e259528c374d6aa3a686a3ae1f7)
+++ b/src/main/java/telran/project/gardenshop/service/ProductService.java	(date 1752055643001)
@@ -1,4 +1,5 @@
 package telran.project.gardenshop.service;
+
 import java.util.List;
 
 import telran.project.gardenshop.dto.ProductEditDto;
@@ -9,9 +10,14 @@
 
 public interface ProductService {
     Product createProduct(Product product);
+
     Product getProductById(Long id);
+
     List<Product> getAllProducts();
+
     Product updateProduct(Long id, Product product);
+
     Product updateProduct(Long id, ProductEditDto dto);
+
     void deleteProduct(Long id);
 }
Index: src/main/java/telran/project/gardenshop/service/FavoriteService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/service/FavoriteService.java b/src/main/java/telran/project/gardenshop/service/FavoriteService.java
--- a/src/main/java/telran/project/gardenshop/service/FavoriteService.java	(revision 7506b4a2d61c8e259528c374d6aa3a686a3ae1f7)
+++ b/src/main/java/telran/project/gardenshop/service/FavoriteService.java	(date 1752055642996)
@@ -5,7 +5,10 @@
 import java.util.List;
 
 public interface FavoriteService {
+
     Favorite addToFavorites(Favorite favorite);
+
     void removeFromFavorites(Long id);
+
     List<Favorite> getAllByUserId(Long userId);
 }
\ No newline at end of file
Index: src/main/java/telran/project/gardenshop/mapper/CategoryMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/mapper/CategoryMapper.java b/src/main/java/telran/project/gardenshop/mapper/CategoryMapper.java
--- a/src/main/java/telran/project/gardenshop/mapper/CategoryMapper.java	(revision 7506b4a2d61c8e259528c374d6aa3a686a3ae1f7)
+++ b/src/main/java/telran/project/gardenshop/mapper/CategoryMapper.java	(date 1752055642934)
@@ -9,9 +9,12 @@
 
 @Mapper(componentModel = "spring")
 public interface CategoryMapper {
+
     Category toEntity(CategoryRequestDto dto);
+
     CategoryResponseDto toDto(Category category);
 
     Category toEntity(CategoryEditDto dto);
+
     void updateEntityFromDto(CategoryEditDto dto, @MappingTarget Category entity);
 }
\ No newline at end of file
Index: src/main/java/telran/project/gardenshop/repository/UserRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/repository/UserRepository.java b/src/main/java/telran/project/gardenshop/repository/UserRepository.java
--- a/src/main/java/telran/project/gardenshop/repository/UserRepository.java	(revision 7506b4a2d61c8e259528c374d6aa3a686a3ae1f7)
+++ b/src/main/java/telran/project/gardenshop/repository/UserRepository.java	(date 1752055642916)
@@ -5,5 +5,6 @@
 import java.util.Optional;
 
 public interface UserRepository extends JpaRepository<User, Long> {
+
     Optional<User> findByEmail(String email);
 }
