Subject: [PATCH] refactor
---
Index: src/main/java/telran/project/gardenshop/dto/CartItemRequestDto.java
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/dto/CartItemRequestDto.java b/src/main/java/telran/project/gardenshop/dto/CartItemRequestDto.java
deleted file mode 100644
--- a/src/main/java/telran/project/gardenshop/dto/CartItemRequestDto.java	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ /dev/null	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
@@ -1,17 +0,0 @@
-package telran.project.gardenshop.dto;
-
-import lombok.AllArgsConstructor;
-import lombok.Data;
-import lombok.NoArgsConstructor;
-
-@Data
-@NoArgsConstructor
-@AllArgsConstructor
-public class CartItemRequestDto {
-
-    private Long productId;
-
-    private Integer quantity;
-
-    private Double price;
-}
\ No newline at end of file
Index: src/main/java/telran/project/gardenshop/dto/CartRequestDto.java
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/dto/CartRequestDto.java b/src/main/java/telran/project/gardenshop/dto/CartRequestDto.java
deleted file mode 100644
--- a/src/main/java/telran/project/gardenshop/dto/CartRequestDto.java	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ /dev/null	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
@@ -1,9 +0,0 @@
-package telran.project.gardenshop.dto;
-
-import lombok.Data;
-
-@Data
-public class CartRequestDto {
-
-    private Long userId;
-}
\ No newline at end of file
Index: src/main/java/telran/project/gardenshop/service/CartItemService.java
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/service/CartItemService.java b/src/main/java/telran/project/gardenshop/service/CartItemService.java
deleted file mode 100644
--- a/src/main/java/telran/project/gardenshop/service/CartItemService.java	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ /dev/null	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
@@ -1,8 +0,0 @@
-package telran.project.gardenshop.service;
-
-import telran.project.gardenshop.entity.CartItem;
-
-public interface CartItemService {
-
-    CartItem getById(Long cartItemId);
-}
Index: src/main/java/telran/project/gardenshop/service/CartItemServiceImpl.java
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/service/CartItemServiceImpl.java b/src/main/java/telran/project/gardenshop/service/CartItemServiceImpl.java
deleted file mode 100644
--- a/src/main/java/telran/project/gardenshop/service/CartItemServiceImpl.java	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ /dev/null	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
@@ -1,43 +0,0 @@
-package telran.project.gardenshop.service;
-
-import lombok.RequiredArgsConstructor;
-import org.springframework.security.core.context.SecurityContextHolder;
-import org.springframework.security.core.userdetails.UsernameNotFoundException;
-import org.springframework.stereotype.Service;
-import telran.project.gardenshop.entity.CartItem;
-import telran.project.gardenshop.entity.User;
-import telran.project.gardenshop.repository.CartItemRepository;
-
-import jakarta.persistence.EntityNotFoundException;
-
-@Service
-@RequiredArgsConstructor
-public class CartItemServiceImpl implements CartItemService {
-
-    private final CartItemRepository cartItemRepository;
-    private final UserService userService;
-
-    @Override
-    public CartItem getById(Long cartItemId) {
-        String email = SecurityContextHolder.getContext().getAuthentication() != null
-                ? SecurityContextHolder.getContext().getAuthentication().getName()
-                : null;
-
-        if (email == null) {
-            throw new UsernameNotFoundException("Anonymous access is not allowed");
-        }
-
-        User current = userService.getUserByEmail(email)
-                .orElseThrow(() -> new UsernameNotFoundException(email));
-
-        CartItem item = cartItemRepository.findById(cartItemId)
-                .orElseThrow(() -> new EntityNotFoundException("CartItem with id " + cartItemId + " not found"));
-
-        if (item.getCart() == null || item.getCart().getUser() == null
-                || !item.getCart().getUser().getId().equals(current.getId())) {
-            throw new EntityNotFoundException("CartItem with id " + cartItemId + " not found");
-        }
-
-        return item;
-    }
-}
Index: src/main/java/telran/project/gardenshop/repository/CartItemRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/repository/CartItemRepository.java b/src/main/java/telran/project/gardenshop/repository/CartItemRepository.java
--- a/src/main/java/telran/project/gardenshop/repository/CartItemRepository.java	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ b/src/main/java/telran/project/gardenshop/repository/CartItemRepository.java	(date 1755075941915)
@@ -10,11 +10,4 @@
 
 @Repository
 public interface CartItemRepository extends JpaRepository<CartItem, Long> {
-    List<CartItem> findByCart(Cart cart);
-
-    Optional<CartItem> findByCartAndProduct(Cart cart, Product product);
-
-    void deleteByCartAndProduct(Cart cart, Product product);
-
-    void deleteAllByCart(Cart cart);
-}
\ No newline at end of file
+}
Index: src/main/java/telran/project/gardenshop/configuration/SecurityConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/configuration/SecurityConfig.java b/src/main/java/telran/project/gardenshop/configuration/SecurityConfig.java
--- a/src/main/java/telran/project/gardenshop/configuration/SecurityConfig.java	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ b/src/main/java/telran/project/gardenshop/configuration/SecurityConfig.java	(date 1755072257042)
@@ -1,63 +1,4 @@
-//package telran.project.gardenshop.configuration;
-//
-//import org.springframework.beans.factory.annotation.Autowired;
-//import org.springframework.context.annotation.Bean;
-//import org.springframework.context.annotation.Configuration;
-//import org.springframework.security.authentication.AuthenticationManager;
-//import org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration;
-//import org.springframework.security.config.annotation.web.builders.HttpSecurity;
-//import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
-//import org.springframework.security.config.http.SessionCreationPolicy;
-//import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
-//import org.springframework.security.crypto.password.PasswordEncoder;
-//import org.springframework.security.web.SecurityFilterChain;
-//import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;
-//import telran.project.gardenshop.service.security.JwtFilter;
-//
-//@Configuration
-//@EnableWebSecurity
-//@EnableMethodSecurity
-//     public class SecurityConfig {
-//
-//    @Autowired
-//    private JwtFilter jwtFilter;
-//
-//    public SecurityConfig(JwtFilter jwtFilter) {
-//        this.jwtFilter = jwtFilter;
-//    }
-//
-//    @Bean
-//    public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {
-//        http
-//                .csrf(csrf -> csrf.disable())
-//                .authorizeHttpRequests(auth -> auth
-//                        .requestMatchers(
-//                                "/v3/api-docs/**",
-//                                "/swagger-ui/**",
-//                                "/swagger-ui.html",
-//                                "/swagger-resources/**",
-//                                "/webjars/**"
-//                        ).permitAll()
-//                        .requestMatchers("/v1/categories").authenticated()
-//                        .requestMatchers("/v1/orders/**").hasRole("USER")
-//                        .anyRequest().permitAll())
-//                .sessionManagement(session ->
-//                        session.sessionCreationPolicy(SessionCreationPolicy.STATELESS))
-//                .addFilterBefore(jwtFilter, UsernamePasswordAuthenticationFilter.class);
-//
-//        return http.build();
-//    }
-//
-//    @Bean
-//    public PasswordEncoder passwordEncoder() {
-//        return new BCryptPasswordEncoder();
-//    }
-//
-//    @Bean
-//    public AuthenticationManager authenticationManager(AuthenticationConfiguration configuration) throws Exception {
-//        return configuration.getAuthenticationManager();
-//    }
-//}
+
 package telran.project.gardenshop.configuration;
 
 import org.springframework.beans.factory.annotation.Autowired;
@@ -73,6 +14,7 @@
 import org.springframework.security.crypto.password.PasswordEncoder;
 import org.springframework.security.web.SecurityFilterChain;
 import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;
+
 import telran.project.gardenshop.service.security.JwtFilter;
 
 @Configuration
@@ -101,7 +43,7 @@
                         .requestMatchers("/v1/categories").authenticated()
                         .anyRequest().permitAll()
                 )
-               .addFilterBefore(jwtFilter, UsernamePasswordAuthenticationFilter.class);
+                .addFilterBefore(jwtFilter, UsernamePasswordAuthenticationFilter.class);
 
         return http.build();
     }
Index: src/main/java/telran/project/gardenshop/dto/ProductReportDto.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/dto/ProductReportDto.java b/src/main/java/telran/project/gardenshop/dto/ProductReportDto.java
--- a/src/main/java/telran/project/gardenshop/dto/ProductReportDto.java	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ b/src/main/java/telran/project/gardenshop/dto/ProductReportDto.java	(date 1755072257099)
@@ -4,6 +4,7 @@
 import lombok.Builder;
 import lombok.Data;
 import lombok.NoArgsConstructor;
+
 import java.math.BigDecimal;
 
 @Data
@@ -23,4 +24,4 @@
     private Long totalQuantitySold;
 
     private BigDecimal totalRevenue;
-} 
\ No newline at end of file
+}
Index: src/main/java/telran/project/gardenshop/service/CategoryServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/service/CategoryServiceImpl.java b/src/main/java/telran/project/gardenshop/service/CategoryServiceImpl.java
--- a/src/main/java/telran/project/gardenshop/service/CategoryServiceImpl.java	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ b/src/main/java/telran/project/gardenshop/service/CategoryServiceImpl.java	(date 1755078351928)
@@ -1,12 +1,15 @@
 package telran.project.gardenshop.service;
 
 import lombok.RequiredArgsConstructor;
+
 import org.springframework.stereotype.Service;
+
 import telran.project.gardenshop.dto.CategoryEditDto;
 import telran.project.gardenshop.entity.Category;
 import telran.project.gardenshop.mapper.CategoryMapper;
 import telran.project.gardenshop.repository.CategoryRepository;
 import telran.project.gardenshop.exception.CategoryNotFoundException;
+
 import java.util.List;
 
 @Service
@@ -44,4 +47,4 @@
     public void deleteCategory(Long id) {
         categoryRepository.delete(getCategoryById(id));
     }
-}
\ No newline at end of file
+}
Index: src/main/java/telran/project/gardenshop/service/UserServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/service/UserServiceImpl.java b/src/main/java/telran/project/gardenshop/service/UserServiceImpl.java
--- a/src/main/java/telran/project/gardenshop/service/UserServiceImpl.java	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ b/src/main/java/telran/project/gardenshop/service/UserServiceImpl.java	(date 1755075097376)
@@ -76,7 +76,8 @@
         if (auth == null || auth.getPrincipal() == null || "anonymousUser".equals(auth.getPrincipal())) {
             throw new UserNotFoundException("No authenticated user");
         }
-        return (User) auth.getPrincipal();
+
+        return getUserByEmail(auth.getName()).get();
     }
 
     private void emailCheck(String email) {
Index: src/main/java/telran/project/gardenshop/service/OrderServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/service/OrderServiceImpl.java b/src/main/java/telran/project/gardenshop/service/OrderServiceImpl.java
--- a/src/main/java/telran/project/gardenshop/service/OrderServiceImpl.java	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ b/src/main/java/telran/project/gardenshop/service/OrderServiceImpl.java	(date 1755078351921)
@@ -108,7 +108,12 @@
 
         validateQuantity(cartItem, itemDto);
 
-        OrderItem orderItem = OrderItem.builder().order(order).product(cartItem.getProduct()).quantity(itemDto.getQuantity()).price(cartItem.getProduct().getPrice()).build();
+        OrderItem orderItem = OrderItem.builder()
+                .order(order)
+                .product(cartItem.getProduct())
+                .quantity(itemDto.getQuantity())
+                .price(cartItem.getProduct().getPrice())
+                .build();
 
         editCartItemList(cartItem, cart.getItems(), itemDto.getQuantity());
 
Index: src/main/java/telran/project/gardenshop/dto/PendingPaymentReportDto.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/dto/PendingPaymentReportDto.java b/src/main/java/telran/project/gardenshop/dto/PendingPaymentReportDto.java
--- a/src/main/java/telran/project/gardenshop/dto/PendingPaymentReportDto.java	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ b/src/main/java/telran/project/gardenshop/dto/PendingPaymentReportDto.java	(date 1755072257056)
@@ -4,6 +4,7 @@
 import lombok.Builder;
 import lombok.Data;
 import lombok.NoArgsConstructor;
+
 import java.math.BigDecimal;
 import java.time.LocalDateTime;
 import java.util.List;
@@ -30,4 +31,4 @@
 
     private List<OrderItemResponseDto> items;
 
-} 
\ No newline at end of file
+}
Index: src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/src/main/resources/application.properties b/src/main/resources/application.properties
--- a/src/main/resources/application.properties	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ b/src/main/resources/application.properties	(date 1755074751822)
@@ -1,7 +1,9 @@
 # ---- server settings
 server.port=8082
 spring.application.name=gardenShop
-#spring.profiles.active=dev
+spring.profiles.active=dev
+
+logging.level.root=debug
 
 # ---- PostgreSQL
 spring.datasource.url=${DB_URL:jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:gardenshop}}
@@ -27,4 +29,4 @@
 
 # ---- key JWT
 #jwt.signing.key=${JWT_SIGNING_KEY}
-jwt.signing.key=aWdqdm1pamlnamRmaWdqdmRmbGtnanZzbG1rZmRnam1zaWRmbGdqdmllcnRqc2VyanN0bThlcnRtZXI4Y2dqcjhqcmU4ZmplOG1qc2lmanNrbGZqbXNka2ZqcmpjZm1qdGptNDk4dHU1OHRqY204amVyamdldW1yZ21qY2VzY29la3JvY21lcnRvcmVrdDljaWVydDk4Y3U0ZXQ4dTg1dXQ4NXVjdHJudGpvZW1ydC4gICAgIHdyb2llcmlqcnRqcnQ4aHI3dGhyZ2hzODl0dTk0dDQzd3UzNHVxZXVmaXNqZmdzbGRpamtsbmd1c2hndWloZGY3OGU5ODd5dDg0OXV0MDk0ajl3amZlaWdqd2lvZ2ppd2hnOThlbjk4Z2g5OHdlaGc5OGVyaDg5ZWg4cmhnaXVlcmhnaW1laHJnb2Vyajk4Z2owOTRldTAzOTR0NDN0MzR0NDN0ZXJna25mbGRrbmdrbGZnbmRmbGdk
\ No newline at end of file
+jwt.signing.key=aWdqdm1pamlnamRmaWdqdmRmbGtnanZzbG1rZmRnam1zaWRmbGdqdmllcnRqc2VyanN0bThlcnRtZXI4Y2dqcjhqcmU4ZmplOG1qc2lmanNrbGZqbXNka2ZqcmpjZm1qdGptNDk4dHU1OHRqY204amVyamdldW1yZ21qY2VzY29la3JvY21lcnRvcmVrdDljaWVydDk4Y3U0ZXQ4dTg1dXQ4NXVjdHJudGpvZW1ydC4gICAgIHdyb2llcmlqcnRqcnQ4aHI3dGhyZ2hzODl0dTk0dDQzd3UzNHVxZXVmaXNqZmdzbGRpamtsbmd1c2hndWloZGY3OGU5ODd5dDg0OXV0MDk0ajl3amZlaWdqd2lvZ2ppd2hnOThlbjk4Z2g5OHdlaGc5OGVyaDg5ZWg4cmhnaXVlcmhnaW1laHJnb2Vyajk4Z2owOTRldTAzOTR0NDN0MzR0NDN0ZXJna25mbGRrbmdrbGZnbmRmbGdk
Index: src/main/java/telran/project/gardenshop/service/CartServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/service/CartServiceImpl.java b/src/main/java/telran/project/gardenshop/service/CartServiceImpl.java
--- a/src/main/java/telran/project/gardenshop/service/CartServiceImpl.java	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ b/src/main/java/telran/project/gardenshop/service/CartServiceImpl.java	(date 1755075941913)
@@ -1,10 +1,13 @@
 package telran.project.gardenshop.service;
 
 import lombok.RequiredArgsConstructor;
+
 import org.springframework.stereotype.Service;
+
 import telran.project.gardenshop.dto.CartResponseDto;
 import telran.project.gardenshop.entity.Cart;
 import telran.project.gardenshop.entity.CartItem;
+import telran.project.gardenshop.entity.Product;
 import telran.project.gardenshop.entity.User;
 import telran.project.gardenshop.exception.CartNotFoundException;
 import telran.project.gardenshop.exception.UserNotFoundException;
@@ -23,6 +26,8 @@
 
     private final UserService userService;
 
+    private final ProductService productService;
+
     @Override
     public Cart get() {
         User currentUser = userService.getCurrent();
@@ -53,9 +58,11 @@
         if (existingItem != null) {
             existingItem.setQuantity(existingItem.getQuantity() + 1);
         } else {
+            Product product = productService.getProductById(productId);
             CartItem newItem = CartItem.builder()
                     .quantity(1)
-                    .cart(cart)
+                    .product(product)
+                    .price(product.getPrice().doubleValue())
                     .build();
             cart.getItems().add(newItem);
         }
Index: src/main/java/telran/project/gardenshop/dto/UserRequestDto.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/dto/UserRequestDto.java b/src/main/java/telran/project/gardenshop/dto/UserRequestDto.java
--- a/src/main/java/telran/project/gardenshop/dto/UserRequestDto.java	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ b/src/main/java/telran/project/gardenshop/dto/UserRequestDto.java	(date 1755072257066)
@@ -21,10 +21,10 @@
     @NotNull(message = "Phone number must not be null")
     @NotBlank(message = "Phone number must not be blank")
     @Pattern(
-        regexp = "^\\+?\\d{10,15}$",
-        message = "Phone number must contain 10 to 15 digits and may start with '+'"
+            regexp = "^\\+?\\d{10,15}$",
+            message = "Phone number must contain 10 to 15 digits and may start with '+'"
     )
     private String phoneNumber;
 
     private String password;
-}
\ No newline at end of file
+}
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
--- a/pom.xml	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ b/pom.xml	(date 1755072741173)
@@ -50,11 +50,11 @@
             <scope>runtime</scope>
         </dependency>
 
-<!--        <dependency>-->
-<!--            <groupId>com.mysql</groupId>-->
-<!--            <artifactId>mysql-connector-j</artifactId>-->
-<!--            <version>9.2.0</version>-->
-<!--        </dependency>-->
+        <dependency>
+            <groupId>com.mysql</groupId>
+            <artifactId>mysql-connector-j</artifactId>
+            <version>9.2.0</version>
+        </dependency>
 
         <!-- Liquibase -->
         <dependency>
Index: src/main/java/telran/project/gardenshop/exception/ProductNotInCartException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/exception/ProductNotInCartException.java b/src/main/java/telran/project/gardenshop/exception/ProductNotInCartException.java
--- a/src/main/java/telran/project/gardenshop/exception/ProductNotInCartException.java	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ b/src/main/java/telran/project/gardenshop/exception/ProductNotInCartException.java	(date 1755072257092)
@@ -1,25 +1,25 @@
 package telran.project.gardenshop.exception;
 
 public class ProductNotInCartException extends RuntimeException {
-    
+
     private final Long productId;
-    
+
     public ProductNotInCartException(Long productId) {
         super("Product with ID " + productId + " not found in cart");
         this.productId = productId;
     }
-    
+
     public ProductNotInCartException(Long productId, String message) {
         super(message);
         this.productId = productId;
     }
-    
+
     public ProductNotInCartException(Long productId, String message, Throwable cause) {
         super(message, cause);
         this.productId = productId;
     }
-    
+
     public Long getProductId() {
         return productId;
     }
-} 
\ No newline at end of file
+}
Index: src/main/java/telran/project/gardenshop/enums/GroupByPeriod.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/enums/GroupByPeriod.java b/src/main/java/telran/project/gardenshop/enums/GroupByPeriod.java
--- a/src/main/java/telran/project/gardenshop/enums/GroupByPeriod.java	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ b/src/main/java/telran/project/gardenshop/enums/GroupByPeriod.java	(date 1755072257077)
@@ -16,15 +16,12 @@
     }
 
     public static GroupByPeriod fromString(String value) {
-        if (value == null) {
-            return null;
-        }
-
         for (GroupByPeriod period : GroupByPeriod.values()) {
             if (period.value.equalsIgnoreCase(value)) {
                 return period;
             }
         }
+
         return null;
     }
 
Index: src/main/java/telran/project/gardenshop/dto/CancelledProductReportDto.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/dto/CancelledProductReportDto.java b/src/main/java/telran/project/gardenshop/dto/CancelledProductReportDto.java
--- a/src/main/java/telran/project/gardenshop/dto/CancelledProductReportDto.java	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ b/src/main/java/telran/project/gardenshop/dto/CancelledProductReportDto.java	(date 1755071280847)
@@ -4,6 +4,7 @@
 import lombok.Builder;
 import lombok.Data;
 import lombok.NoArgsConstructor;
+
 import java.math.BigDecimal;
 
 @Data
Index: src/main/java/telran/project/gardenshop/mapper/CartItemMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/mapper/CartItemMapper.java b/src/main/java/telran/project/gardenshop/mapper/CartItemMapper.java
--- a/src/main/java/telran/project/gardenshop/mapper/CartItemMapper.java	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ b/src/main/java/telran/project/gardenshop/mapper/CartItemMapper.java	(date 1755073059167)
@@ -8,7 +8,7 @@
 @Mapper(componentModel = "spring")
 public interface CartItemMapper {
 
-    @Mapping(source = "cart.id", target = "cartId")
+   // @Mapping(source = "cart.id", target = "cartId")
     @Mapping(source = "product.id", target = "productId")
     @Mapping(source = "product.name", target = "productName")
     CartItemResponseDto toDto(CartItem cartItem);
Index: src/main/java/telran/project/gardenshop/dto/OrderResponseDto.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/dto/OrderResponseDto.java b/src/main/java/telran/project/gardenshop/dto/OrderResponseDto.java
--- a/src/main/java/telran/project/gardenshop/dto/OrderResponseDto.java	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ b/src/main/java/telran/project/gardenshop/dto/OrderResponseDto.java	(date 1755072257101)
@@ -6,6 +6,7 @@
 import lombok.NoArgsConstructor;
 import telran.project.gardenshop.enums.DeliveryMethod;
 import telran.project.gardenshop.enums.OrderStatus;
+
 import java.time.LocalDateTime;
 import java.util.List;
 
Index: src/main/java/telran/project/gardenshop/controller/AuthController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/controller/AuthController.java b/src/main/java/telran/project/gardenshop/controller/AuthController.java
--- a/src/main/java/telran/project/gardenshop/controller/AuthController.java	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ b/src/main/java/telran/project/gardenshop/controller/AuthController.java	(date 1755072257061)
@@ -1,10 +1,12 @@
 package telran.project.gardenshop.controller;
 
 import lombok.RequiredArgsConstructor;
+
 import org.springframework.web.bind.annotation.PostMapping;
 import org.springframework.web.bind.annotation.RequestBody;
 import org.springframework.web.bind.annotation.RequestMapping;
 import org.springframework.web.bind.annotation.RestController;
+
 import telran.project.gardenshop.dto.security.AuthRequest;
 import telran.project.gardenshop.dto.security.AuthResponse;
 import telran.project.gardenshop.service.security.AuthenticationService;
@@ -20,4 +22,4 @@
     public AuthResponse login(@RequestBody AuthRequest authRequest) {
         return authenticationService.authenticate(authRequest);
     }
-}
\ No newline at end of file
+}
Index: src/main/java/telran/project/gardenshop/dto/OrderCreateRequestDto.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/dto/OrderCreateRequestDto.java b/src/main/java/telran/project/gardenshop/dto/OrderCreateRequestDto.java
--- a/src/main/java/telran/project/gardenshop/dto/OrderCreateRequestDto.java	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ b/src/main/java/telran/project/gardenshop/dto/OrderCreateRequestDto.java	(date 1755072257088)
@@ -9,6 +9,7 @@
 import lombok.Data;
 import lombok.NoArgsConstructor;
 import telran.project.gardenshop.enums.DeliveryMethod;
+
 import java.util.ArrayList;
 import java.util.List;
 
Index: src/main/java/telran/project/gardenshop/controller/FavoriteController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/controller/FavoriteController.java b/src/main/java/telran/project/gardenshop/controller/FavoriteController.java
--- a/src/main/java/telran/project/gardenshop/controller/FavoriteController.java	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ b/src/main/java/telran/project/gardenshop/controller/FavoriteController.java	(date 1755071280837)
@@ -1,11 +1,14 @@
 package telran.project.gardenshop.controller;
 
 import io.swagger.v3.oas.annotations.security.SecurityRequirement;
+
 import jakarta.validation.Valid;
 import lombok.RequiredArgsConstructor;
+
 import org.springframework.http.ResponseEntity;
 import org.springframework.http.HttpStatus;
 import org.springframework.web.bind.annotation.*;
+
 import telran.project.gardenshop.dto.FavoriteRequestDto;
 import telran.project.gardenshop.dto.FavoriteResponseDto;
 import telran.project.gardenshop.entity.Favorite;
@@ -13,7 +16,9 @@
 import telran.project.gardenshop.entity.User;
 import telran.project.gardenshop.mapper.FavoriteMapper;
 import telran.project.gardenshop.service.FavoriteService;
+
 import io.swagger.v3.oas.annotations.Operation;
+
 import java.time.LocalDateTime;
 import java.util.List;
 import java.util.stream.Collectors;
Index: src/main/java/telran/project/gardenshop/controller/ProductController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/controller/ProductController.java b/src/main/java/telran/project/gardenshop/controller/ProductController.java
--- a/src/main/java/telran/project/gardenshop/controller/ProductController.java	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ b/src/main/java/telran/project/gardenshop/controller/ProductController.java	(date 1755071280843)
@@ -1,10 +1,13 @@
 package telran.project.gardenshop.controller;
 
 import io.swagger.v3.oas.annotations.Operation;
+
 import lombok.RequiredArgsConstructor;
+
 import org.springframework.data.jpa.domain.Specification;
 import org.springframework.http.ResponseEntity;
 import org.springframework.web.bind.annotation.*;
+
 import telran.project.gardenshop.utilities.ProductSpecification;
 import telran.project.gardenshop.repository.ProductRepository;
 import telran.project.gardenshop.dto.ProductEditDto;
@@ -13,8 +16,10 @@
 import telran.project.gardenshop.entity.Product;
 import telran.project.gardenshop.mapper.ProductMapper;
 import telran.project.gardenshop.service.ProductService;
+
 import java.util.List;
 import java.util.stream.Collectors;
+
 import jakarta.validation.Valid;
 
 @RestController
Index: src/main/java/telran/project/gardenshop/entity/Favorite.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/entity/Favorite.java b/src/main/java/telran/project/gardenshop/entity/Favorite.java
--- a/src/main/java/telran/project/gardenshop/entity/Favorite.java	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ b/src/main/java/telran/project/gardenshop/entity/Favorite.java	(date 1755075782163)
@@ -4,6 +4,8 @@
 import jakarta.persistence.*;
 import lombok.*;
 
+import org.hibernate.annotations.CreationTimestamp;
+
 import java.time.LocalDateTime;
 
 @Entity
@@ -32,5 +34,6 @@
     private Product product;
 
     @Column(name = "created_at")
+    @CreationTimestamp
     private LocalDateTime createdAt;
 }
Index: src/main/resources/db/changelog/db.changelog-1.0-init.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/db/changelog/db.changelog-1.0-init.xml b/src/main/resources/db/changelog/db.changelog-1.0-init.xml
--- a/src/main/resources/db/changelog/db.changelog-1.0-init.xml	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ b/src/main/resources/db/changelog/db.changelog-1.0-init.xml	(date 1755074190181)
@@ -147,4 +147,65 @@
                              constraintName="uc_payments_order_id"/>
     </changeSet>
 
-</databaseChangeLog>
\ No newline at end of file
+    <changeSet id="009-add-cart" author="vladiradi">
+        <createTable tableName="carts">
+            <column
+                    name="id"
+                    type="SERIAL">
+                <constraints nullable="false"
+                             primaryKey="true"
+                             primaryKeyName="pk_carts"/>
+            </column>
+            <column name="user_id"
+                    type="INTEGER">
+                <constraints nullable="false"/>
+            </column>
+        </createTable>
+
+        <addForeignKeyConstraint baseColumnNames="user_id"
+                                 baseTableName="carts"
+                                 constraintName="FK_CARTS_ON_USER"
+                                 referencedColumnNames="id"
+                                 referencedTableName="users"/>
+    </changeSet>
+
+    <changeSet id="010-add-cart-item" author="vladiradi">
+        <createTable tableName="cart_items">
+            <column
+                    name="id"
+                    type="SERIAL">
+                <constraints nullable="false"
+                             primaryKey="true"
+                             primaryKeyName="pk_cart_items"/>
+            </column>
+            <column name="product_id"
+                    type="INTEGER">
+                <constraints nullable="false"/>
+            </column>
+            <column name="quantity"
+                    type="INT">
+                <constraints nullable="false"/>
+            </column>
+            <column name="price"
+                    type="DOUBLE">
+                <constraints nullable="false"/>
+            </column>
+            <column name="cart_id"
+                    type="INTEGER"/>
+        </createTable>
+
+        <addForeignKeyConstraint baseColumnNames="cart_id"
+                                 baseTableName="cart_items"
+                                 constraintName="FK_CART_ITEMS_ON_CART"
+                                 referencedColumnNames="id"
+                                 referencedTableName="carts"/>
+
+
+        <addForeignKeyConstraint baseColumnNames="product_id"
+                                 baseTableName="cart_items"
+                                 constraintName="FK_CART_ITEMS_ON_PRODUCT"
+                                 referencedColumnNames="id"
+                                 referencedTableName="products"/>
+    </changeSet>
+
+</databaseChangeLog>
Index: src/main/java/telran/project/gardenshop/dto/OrderHistoryDto.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/dto/OrderHistoryDto.java b/src/main/java/telran/project/gardenshop/dto/OrderHistoryDto.java
--- a/src/main/java/telran/project/gardenshop/dto/OrderHistoryDto.java	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ b/src/main/java/telran/project/gardenshop/dto/OrderHistoryDto.java	(date 1755072257070)
@@ -1,6 +1,7 @@
 package telran.project.gardenshop.dto;
 
 import lombok.*;
+
 import java.util.List;
 
 @Getter
@@ -25,4 +26,4 @@
     private String recipientName;
 
     private String recipientPhone;
-}
\ No newline at end of file
+}
Index: src/main/java/telran/project/gardenshop/controller/PaymentController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/controller/PaymentController.java b/src/main/java/telran/project/gardenshop/controller/PaymentController.java
--- a/src/main/java/telran/project/gardenshop/controller/PaymentController.java	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ b/src/main/java/telran/project/gardenshop/controller/PaymentController.java	(date 1755071280841)
@@ -1,11 +1,14 @@
 package telran.project.gardenshop.controller;
 
 import lombok.RequiredArgsConstructor;
+
 import org.springframework.web.bind.annotation.*;
+
 import telran.project.gardenshop.service.PaymentService;
 import telran.project.gardenshop.entity.Payment;
 import telran.project.gardenshop.enums.PaymentMethod;
 import telran.project.gardenshop.enums.PaymentStatus;
+
 import java.util.List;
 
 @RestController
@@ -38,8 +41,9 @@
             @RequestParam PaymentStatus status) {
         return paymentService.updatePaymentStatus(id, status);
     }
+
     @DeleteMapping("/{id}")
     public void deletePayment(@PathVariable Long id) {
         paymentService.deletePayment(id);
     }
-}
\ No newline at end of file
+}
Index: src/main/java/telran/project/gardenshop/entity/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/entity/User.java b/src/main/java/telran/project/gardenshop/entity/User.java
--- a/src/main/java/telran/project/gardenshop/entity/User.java	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ b/src/main/java/telran/project/gardenshop/entity/User.java	(date 1755075941903)
@@ -46,8 +46,4 @@
     @EqualsAndHashCode.Exclude
     @Builder.Default
     private List<Favorite> favorites = new ArrayList<>();
-
-    public List<Favorite> getFavorites() {
-        return favorites != null ? favorites : new ArrayList<>();
-    }
-}
\ No newline at end of file
+}
Index: src/main/java/telran/project/gardenshop/service/ReportService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/service/ReportService.java b/src/main/java/telran/project/gardenshop/service/ReportService.java
--- a/src/main/java/telran/project/gardenshop/service/ReportService.java	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ b/src/main/java/telran/project/gardenshop/service/ReportService.java	(date 1755078351914)
@@ -6,6 +6,7 @@
 import telran.project.gardenshop.dto.GroupedProfitReportDto;
 import telran.project.gardenshop.dto.PendingPaymentReportDto;
 import telran.project.gardenshop.enums.GroupByPeriod;
+
 import java.time.LocalDateTime;
 import java.util.List;
 
Index: src/main/java/telran/project/gardenshop/controller/CartController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/controller/CartController.java b/src/main/java/telran/project/gardenshop/controller/CartController.java
--- a/src/main/java/telran/project/gardenshop/controller/CartController.java	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ b/src/main/java/telran/project/gardenshop/controller/CartController.java	(date 1755072257080)
@@ -7,11 +7,14 @@
 import io.swagger.v3.oas.annotations.responses.ApiResponse;
 import io.swagger.v3.oas.annotations.responses.ApiResponses;
 import io.swagger.v3.oas.annotations.security.SecurityRequirement;
+
 import jakarta.validation.constraints.Min;
 import lombok.RequiredArgsConstructor;
+
 import org.springframework.http.HttpStatus;
 import org.springframework.http.ResponseEntity;
 import org.springframework.web.bind.annotation.*;
+
 import telran.project.gardenshop.dto.CartResponseDto;
 import telran.project.gardenshop.entity.Cart;
 import telran.project.gardenshop.mapper.CartMapper;
Index: src/main/java/telran/project/gardenshop/service/ReportServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/service/ReportServiceImpl.java b/src/main/java/telran/project/gardenshop/service/ReportServiceImpl.java
--- a/src/main/java/telran/project/gardenshop/service/ReportServiceImpl.java	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ b/src/main/java/telran/project/gardenshop/service/ReportServiceImpl.java	(date 1755078351942)
@@ -1,7 +1,9 @@
 package telran.project.gardenshop.service;
 
 import lombok.RequiredArgsConstructor;
+
 import org.springframework.stereotype.Service;
+
 import telran.project.gardenshop.dto.ProductReportDto;
 import telran.project.gardenshop.dto.ProfitReportDto;
 import telran.project.gardenshop.dto.GroupedProfitReportDto;
@@ -15,6 +17,7 @@
 import telran.project.gardenshop.enums.GroupByPeriod;
 import telran.project.gardenshop.repository.OrderRepository;
 import telran.project.gardenshop.repository.OrderItemRepository;
+
 import java.math.BigDecimal;
 import java.math.RoundingMode;
 import java.time.LocalDateTime;
@@ -35,10 +38,10 @@
 
     private final OrderRepository orderRepository;
 
+    /// SERVICE
 
     @Override
     public ProfitReportDto getProfitReport(LocalDateTime startDate, LocalDateTime endDate) {
-
         List<Order> ordersInPeriod = orderRepository.findAllByCreatedAtBetweenAndStatus(
                 startDate, endDate, OrderStatus.DELIVERED);
 
@@ -124,14 +127,15 @@
         switch (groupBy) {
             case HOUR:
                 return dateTime.format(java.time.format.DateTimeFormatter.ofPattern("yyyy-MM-dd HH:00"));
-            case DAY:
-                return dateTime.toLocalDate().toString();
+//            case DAY:
+//                return dateTime.toLocalDate().toString();
             case WEEK:
                 LocalDate date = dateTime.toLocalDate();
                 LocalDate weekStart = date.with(TemporalAdjusters.previousOrSame(DayOfWeek.MONDAY));
                 return "Week " + weekStart.format(java.time.format.DateTimeFormatter.ofPattern("yyyy-MM-dd"));
             case MONTH:
                 return dateTime.format(java.time.format.DateTimeFormatter.ofPattern("yyyy-MM"));
+            case DAY:
             default:
                 return dateTime.toLocalDate().toString();
         }
@@ -171,41 +175,35 @@
     }
 
     private LocalDateTime getPeriodStart(String periodKey, GroupByPeriod groupBy) {
-        switch (groupBy) {
-            case HOUR:
-                return LocalDateTime.parse(periodKey + ":00",
-                        java.time.format.DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss"));
-            case DAY:
-                return LocalDate.parse(periodKey).atStartOfDay();
-            case WEEK:
+        return switch (groupBy) {
+            case HOUR -> LocalDateTime.parse(periodKey + ":00",
+                    java.time.format.DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss"));
+            case DAY -> LocalDate.parse(periodKey).atStartOfDay();
+            case WEEK -> {
                 // periodKey format: "Week YYYY-MM-DD"
                 String datePart = periodKey.substring(5); // Remove "Week " prefix
-                return LocalDate.parse(datePart).atStartOfDay();
-            case MONTH:
-                return LocalDate.parse(periodKey + "-01").atStartOfDay();
-            default:
-                return LocalDate.parse(periodKey).atStartOfDay();
-        }
+                yield LocalDate.parse(datePart).atStartOfDay(); // Remove "Week " prefix
+            }
+            case MONTH -> LocalDate.parse(periodKey + "-01").atStartOfDay();
+        };
     }
 
     private LocalDateTime getPeriodEnd(String periodKey, GroupByPeriod groupBy) {
-        switch (groupBy) {
-            case HOUR:
-                return LocalDateTime.parse(periodKey + ":00",
-                        java.time.format.DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss")).plusHours(1);
-            case DAY:
-                return LocalDate.parse(periodKey).atTime(23, 59, 59);
-            case WEEK:
+        return switch (groupBy) {
+            case HOUR -> LocalDateTime.parse(periodKey + ":00",
+                    java.time.format.DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss")).plusHours(1);
+            case DAY -> LocalDate.parse(periodKey).atTime(23, 59, 59);
+            case WEEK -> {
                 //YYYY-MM-DD
                 String datePart = periodKey.substring(5); // Remove "Week " prefix
                 LocalDate weekStart = LocalDate.parse(datePart);
-                return weekStart.plusDays(6).atTime(23, 59, 59);
-            case MONTH:
+                yield weekStart.plusDays(6).atTime(23, 59, 59);
+            }
+            case MONTH -> {
                 LocalDate monthStart = LocalDate.parse(periodKey + "-01");
-                return monthStart.plusMonths(1).minusDays(1).atTime(23, 59, 59);
-            default:
-                return LocalDate.parse(periodKey).atTime(23, 59, 59);
-        }
+                yield monthStart.plusMonths(1).minusDays(1).atTime(23, 59, 59);
+            }
+        };
     }
 
     private GroupedProfitReportDto createEmptyGroupedReport(LocalDateTime startDate, LocalDateTime endDate, GroupByPeriod groupBy) {
@@ -324,5 +322,4 @@
                 .limit(limit)
                 .collect(Collectors.toList());
     }
-
 }
Index: src/main/java/telran/project/gardenshop/entity/Category.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/entity/Category.java b/src/main/java/telran/project/gardenshop/entity/Category.java
--- a/src/main/java/telran/project/gardenshop/entity/Category.java	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ b/src/main/java/telran/project/gardenshop/entity/Category.java	(date 1755075782179)
@@ -4,6 +4,7 @@
 import jakarta.persistence.*;
 import lombok.*;
 
+import java.util.ArrayList;
 import java.util.List;
 
 @Entity
@@ -31,5 +32,6 @@
     @JsonManagedReference
     @ToString.Exclude
     @EqualsAndHashCode.Exclude
-    private List<Product> products;
-}
\ No newline at end of file
+    @Builder.Default
+    private List<Product> products = new ArrayList<>();
+}
Index: src/main/java/telran/project/gardenshop/controller/OrderController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/controller/OrderController.java b/src/main/java/telran/project/gardenshop/controller/OrderController.java
--- a/src/main/java/telran/project/gardenshop/controller/OrderController.java	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ b/src/main/java/telran/project/gardenshop/controller/OrderController.java	(date 1755071280826)
@@ -3,10 +3,12 @@
 import jakarta.validation.Valid;
 import jakarta.validation.constraints.Positive;
 import lombok.RequiredArgsConstructor;
+
 import org.springframework.http.HttpStatus;
 import org.springframework.security.access.prepost.PreAuthorize;
 import org.springframework.validation.annotation.Validated;
 import org.springframework.web.bind.annotation.*;
+
 import telran.project.gardenshop.dto.OrderCreateRequestDto;
 import telran.project.gardenshop.dto.OrderResponseDto;
 import telran.project.gardenshop.dto.OrderShortResponseDto;
Index: src/main/java/telran/project/gardenshop/controller/ReportController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/controller/ReportController.java b/src/main/java/telran/project/gardenshop/controller/ReportController.java
--- a/src/main/java/telran/project/gardenshop/controller/ReportController.java	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ b/src/main/java/telran/project/gardenshop/controller/ReportController.java	(date 1755071280845)
@@ -3,10 +3,13 @@
 import io.swagger.v3.oas.annotations.Operation;
 import io.swagger.v3.oas.annotations.Parameter;
 import io.swagger.v3.oas.annotations.media.Schema;
+
 import lombok.RequiredArgsConstructor;
+
 import org.springframework.format.annotation.DateTimeFormat;
 import org.springframework.http.ResponseEntity;
 import org.springframework.web.bind.annotation.*;
+
 import telran.project.gardenshop.dto.ProductReportDto;
 import telran.project.gardenshop.dto.ProfitReportDto;
 import telran.project.gardenshop.dto.GroupedProfitReportDto;
@@ -30,7 +33,7 @@
     public ResponseEntity<List<ProductReportDto>> getTopProductsBySales(
             @RequestParam(defaultValue = "10")
             @Parameter(description = "Number of top products to return",
-                      schema = @Schema(minimum = "1", defaultValue = "10"))
+                    schema = @Schema(minimum = "1", defaultValue = "10"))
             int limit) {
         List<ProductReportDto> topProducts = reportService.getTopProductsBySales(limit);
         return ResponseEntity.ok(topProducts);
@@ -41,7 +44,7 @@
     public ResponseEntity<List<CancelledProductReportDto>> getTopCancelledProducts(
             @RequestParam(defaultValue = "10")
             @Parameter(description = "Number of top cancelled products to return",
-                      schema = @Schema(minimum = "1", defaultValue = "10"))
+                    schema = @Schema(minimum = "1", defaultValue = "10"))
             int limit) {
         List<CancelledProductReportDto> topCancelledProducts = reportService.getTopProductsByCancellations(limit);
         return ResponseEntity.ok(topCancelledProducts);
@@ -52,13 +55,13 @@
     public ResponseEntity<ProfitReportDto> getProfitReport(
             @RequestParam @DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME)
             @Parameter(description = "Start date for the report period (ISO format: YYYY-MM-DDTHH:mm:ss)",
-                      example = "2024-01-01T00:00:00",
-                      schema = @Schema(type = "string", format = "date-time", defaultValue = "2024-01-01T00:00:00"))
+                    example = "2024-01-01T00:00:00",
+                    schema = @Schema(type = "string", format = "date-time", defaultValue = "2024-01-01T00:00:00"))
             LocalDateTime startDate,
             @RequestParam @DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME)
             @Parameter(description = "End date for the report period (ISO format: YYYY-MM-DDTHH:mm:ss)",
-                      example = "2024-12-31T23:59:59",
-                      schema = @Schema(type = "string", format = "date-time", defaultValue = "2024-12-31T23:59:59"))
+                    example = "2024-12-31T23:59:59",
+                    schema = @Schema(type = "string", format = "date-time", defaultValue = "2024-12-31T23:59:59"))
             LocalDateTime endDate) {
         ProfitReportDto profitReport = reportService.getProfitReport(startDate, endDate);
         return ResponseEntity.ok(profitReport);
@@ -69,18 +72,18 @@
     public ResponseEntity<GroupedProfitReportDto> getGroupedProfitReport(
             @RequestParam @DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME)
             @Parameter(description = "Start date for the report period (ISO format: YYYY-MM-DDTHH:mm:ss)",
-                      example = "2024-01-01T00:00:00",
-                      schema = @Schema(type = "string", format = "date-time", defaultValue = "2024-01-01T00:00:00"))
+                    example = "2024-01-01T00:00:00",
+                    schema = @Schema(type = "string", format = "date-time", defaultValue = "2024-01-01T00:00:00"))
             LocalDateTime startDate,
             @RequestParam @DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME)
             @Parameter(description = "End date for the report period (ISO format: YYYY-MM-DDTHH:mm:ss)",
-                      example = "2024-12-31T23:59:59",
-                      schema = @Schema(type = "string", format = "date-time", defaultValue = "2024-12-31T23:59:59"))
+                    example = "2024-12-31T23:59:59",
+                    schema = @Schema(type = "string", format = "date-time", defaultValue = "2024-12-31T23:59:59"))
             LocalDateTime endDate,
             @RequestParam(defaultValue = "DAY")
             @Parameter(description = "Grouping period",
-                      schema = @Schema(allowableValues = {"HOUR", "DAY", "WEEK", "MONTH"},
-                                      defaultValue = "DAY"))
+                    schema = @Schema(allowableValues = {"HOUR", "DAY", "WEEK", "MONTH"},
+                            defaultValue = "DAY"))
             String groupBy) {
         GroupByPeriod groupByPeriod = GroupByPeriod.fromString(groupBy);
         if (groupByPeriod == null) {
@@ -95,7 +98,7 @@
     public ResponseEntity<List<PendingPaymentReportDto>> getPendingPaymentOrders(
             @RequestParam(defaultValue = "7")
             @Parameter(description = "Number of days older than which to find pending payments",
-                      schema = @Schema(minimum = "1", defaultValue = "7"))
+                    schema = @Schema(minimum = "1", defaultValue = "7"))
             int daysOlder) {
         List<PendingPaymentReportDto> pendingOrders = reportService.getPendingPaymentOrders(daysOlder);
         return ResponseEntity.ok(pendingOrders);
Index: src/test/java/telran/project/gardenshop/service/OrderServiceImplIT.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/telran/project/gardenshop/service/OrderServiceImplIT.java b/src/test/java/telran/project/gardenshop/service/OrderServiceImplIT.java
--- a/src/test/java/telran/project/gardenshop/service/OrderServiceImplIT.java	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ b/src/test/java/telran/project/gardenshop/service/OrderServiceImplIT.java	(date 1755072985847)
@@ -52,9 +52,6 @@
     @MockBean
     private CartService cartService;
 
-    @MockBean
-    private CartItemService cartItemService;
-
     @MockBean
     private UserService userService;
 
@@ -89,7 +86,7 @@
 
         CartItem cartItem = CartItem.builder()
                 .id(1L)
-                .cart(cart)
+                //.cart(cart)
                 .product(product)
                 .quantity(3)  // >= requested quantity (2)
                 .price(10d)
Index: src/main/java/telran/project/gardenshop/controller/UserController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/controller/UserController.java b/src/main/java/telran/project/gardenshop/controller/UserController.java
--- a/src/main/java/telran/project/gardenshop/controller/UserController.java	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ b/src/main/java/telran/project/gardenshop/controller/UserController.java	(date 1755071280831)
@@ -2,17 +2,21 @@
 
 import io.swagger.v3.oas.annotations.Operation;
 import io.swagger.v3.oas.annotations.security.SecurityRequirement;
+
 import jakarta.validation.Valid;
 import lombok.RequiredArgsConstructor;
+
 import org.springframework.http.ResponseEntity;
 import org.springframework.security.crypto.password.PasswordEncoder;
 import org.springframework.web.bind.annotation.*;
+
 import telran.project.gardenshop.dto.UserEditDto;
 import telran.project.gardenshop.dto.UserRequestDto;
 import telran.project.gardenshop.dto.UserResponseDto;
 import telran.project.gardenshop.entity.User;
 import telran.project.gardenshop.mapper.UserMapper;
 import telran.project.gardenshop.service.UserService;
+
 import java.util.List;
 import java.util.stream.Collectors;
 
@@ -65,4 +69,4 @@
         userService.deleteUser(id);
         return ResponseEntity.noContent().build();
     }
-}
\ No newline at end of file
+}
Index: src/main/java/telran/project/gardenshop/exception/OrderNotFoundException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/exception/OrderNotFoundException.java b/src/main/java/telran/project/gardenshop/exception/OrderNotFoundException.java
--- a/src/main/java/telran/project/gardenshop/exception/OrderNotFoundException.java	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ b/src/main/java/telran/project/gardenshop/exception/OrderNotFoundException.java	(date 1755072257085)
@@ -5,7 +5,7 @@
         super(message);
     }
 
-  public OrderNotFoundException(Long id) {
-    super("Order not found with id: " + id);
-  }
+    public OrderNotFoundException(Long id) {
+        super("Order not found with id: " + id);
+    }
 }
Index: src/main/java/telran/project/gardenshop/service/ProductServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/service/ProductServiceImpl.java b/src/main/java/telran/project/gardenshop/service/ProductServiceImpl.java
--- a/src/main/java/telran/project/gardenshop/service/ProductServiceImpl.java	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ b/src/main/java/telran/project/gardenshop/service/ProductServiceImpl.java	(date 1755078351949)
@@ -1,12 +1,15 @@
 package telran.project.gardenshop.service;
 
 import lombok.RequiredArgsConstructor;
+
 import org.springframework.stereotype.Service;
+
 import telran.project.gardenshop.dto.ProductEditDto;
 import telran.project.gardenshop.entity.Category;
 import telran.project.gardenshop.entity.Product;
 import telran.project.gardenshop.exception.ProductNotFoundException;
 import telran.project.gardenshop.repository.ProductRepository;
+
 import java.util.List;
 
 @Service
@@ -49,6 +52,7 @@
 
         return productRepository.save(product);
     }
+
     @Override
 
     public Product updateProduct(Long id, ProductEditDto dto) {
Index: src/main/java/telran/project/gardenshop/controller/CategoryController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/controller/CategoryController.java b/src/main/java/telran/project/gardenshop/controller/CategoryController.java
--- a/src/main/java/telran/project/gardenshop/controller/CategoryController.java	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ b/src/main/java/telran/project/gardenshop/controller/CategoryController.java	(date 1755071280851)
@@ -2,17 +2,21 @@
 
 import io.swagger.v3.oas.annotations.Operation;
 import io.swagger.v3.oas.annotations.security.SecurityRequirement;
+
 import jakarta.validation.Valid;
 import lombok.RequiredArgsConstructor;
+
 import org.springframework.http.HttpStatus;
 import org.springframework.http.ResponseEntity;
 import org.springframework.web.bind.annotation.*;
+
 import telran.project.gardenshop.dto.CategoryEditDto;
 import telran.project.gardenshop.dto.CategoryRequestDto;
 import telran.project.gardenshop.dto.CategoryResponseDto;
 import telran.project.gardenshop.entity.Category;
 import telran.project.gardenshop.mapper.CategoryMapper;
 import telran.project.gardenshop.service.CategoryService;
+
 import java.util.List;
 import java.util.stream.Collectors;
 
@@ -66,4 +70,4 @@
         categoryService.deleteCategory(id);
         return ResponseEntity.noContent().build();
     }
-}
\ No newline at end of file
+}
Index: src/test/java/telran/project/gardenshop/service/OrderServiceImplTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/telran/project/gardenshop/service/OrderServiceImplTest.java b/src/test/java/telran/project/gardenshop/service/OrderServiceImplTest.java
--- a/src/test/java/telran/project/gardenshop/service/OrderServiceImplTest.java	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ b/src/test/java/telran/project/gardenshop/service/OrderServiceImplTest.java	(date 1755072985849)
@@ -86,7 +86,7 @@
 
         CartItem cartItem1 = CartItem.builder()
                 .id(1L)
-                .cart(cart)
+             //   .cart(cart)
                 .product(product1)
                 .quantity(3)  // >= requested quantity (2)
                 .price(100d)
@@ -94,7 +94,7 @@
 
         CartItem cartItem2 = CartItem.builder()
                 .id(2L)
-                .cart(cart)
+               // .cart(cart)
                 .product(product2)
                 .quantity(2)  // >= requested quantity (1)
                 .price(50d)
Index: src/main/java/telran/project/gardenshop/service/FavoriteServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/service/FavoriteServiceImpl.java b/src/main/java/telran/project/gardenshop/service/FavoriteServiceImpl.java
--- a/src/main/java/telran/project/gardenshop/service/FavoriteServiceImpl.java	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ b/src/main/java/telran/project/gardenshop/service/FavoriteServiceImpl.java	(date 1755078351951)
@@ -37,8 +37,7 @@
 
     @Override
     public void removeFromFavorites(Long id) {
-        Favorite favorite = favoriteRepository.findById(id)
-                .orElseThrow(() -> new FavoriteNotFoundException(id));
+        Favorite favorite = getFavoriteById(id);
         favoriteRepository.delete(favorite);
     }
 
Index: src/main/java/telran/project/gardenshop/exception/PaymentAlreadyExistsException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/exception/PaymentAlreadyExistsException.java b/src/main/java/telran/project/gardenshop/exception/PaymentAlreadyExistsException.java
--- a/src/main/java/telran/project/gardenshop/exception/PaymentAlreadyExistsException.java	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ b/src/main/java/telran/project/gardenshop/exception/PaymentAlreadyExistsException.java	(date 1755072257095)
@@ -1,10 +1,11 @@
 package telran.project.gardenshop.exception;
 
 public class PaymentAlreadyExistsException extends RuntimeException {
-  public PaymentAlreadyExistsException(String message) {
-    super(message);
-  }
-  public PaymentAlreadyExistsException(String message, Throwable cause) {
-    super(message, cause);
-  }
-}
\ No newline at end of file
+    public PaymentAlreadyExistsException(String message) {
+        super(message);
+    }
+
+    public PaymentAlreadyExistsException(String message, Throwable cause) {
+        super(message, cause);
+    }
+}
Index: src/main/java/telran/project/gardenshop/service/ProductService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/service/ProductService.java b/src/main/java/telran/project/gardenshop/service/ProductService.java
--- a/src/main/java/telran/project/gardenshop/service/ProductService.java	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ b/src/main/java/telran/project/gardenshop/service/ProductService.java	(date 1755078351955)
@@ -1,6 +1,7 @@
 package telran.project.gardenshop.service;
 
 import java.util.List;
+
 import telran.project.gardenshop.dto.ProductEditDto;
 import telran.project.gardenshop.entity.Product;
 
@@ -17,4 +18,4 @@
     Product updateProduct(Long id, ProductEditDto dto);
 
     void deleteProduct(Long id);
-}
\ No newline at end of file
+}
Index: src/main/java/telran/project/gardenshop/service/FavoriteService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/service/FavoriteService.java b/src/main/java/telran/project/gardenshop/service/FavoriteService.java
--- a/src/main/java/telran/project/gardenshop/service/FavoriteService.java	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ b/src/main/java/telran/project/gardenshop/service/FavoriteService.java	(date 1755078351959)
@@ -1,6 +1,7 @@
 package telran.project.gardenshop.service;
 
 import telran.project.gardenshop.entity.Favorite;
+
 import java.util.List;
 
 public interface FavoriteService {
@@ -14,4 +15,4 @@
     Favorite getFavoriteById(Long id);
 
     Favorite updateFavorite(Long id, Favorite updatedFavorite);
-}
\ No newline at end of file
+}
Index: src/main/java/telran/project/gardenshop/service/OrderService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/service/OrderService.java b/src/main/java/telran/project/gardenshop/service/OrderService.java
--- a/src/main/java/telran/project/gardenshop/service/OrderService.java	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ b/src/main/java/telran/project/gardenshop/service/OrderService.java	(date 1755078351934)
@@ -9,11 +9,15 @@
 public interface OrderService {
 
     Order getById(Long id);
+
     List<Order> getForCurrentUser();
+
     List<Order> getActive();
+
     List<Order> getAll();
 
     Order create(OrderCreateRequestDto dto);
+
     Order cancel(Long id);
 
     void delete(Long id);
Index: src/main/java/telran/project/gardenshop/service/PaymentServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/service/PaymentServiceImpl.java b/src/main/java/telran/project/gardenshop/service/PaymentServiceImpl.java
--- a/src/main/java/telran/project/gardenshop/service/PaymentServiceImpl.java	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ b/src/main/java/telran/project/gardenshop/service/PaymentServiceImpl.java	(date 1755078351938)
@@ -2,8 +2,10 @@
 
 import lombok.RequiredArgsConstructor;
 import lombok.extern.slf4j.Slf4j;
+
 import org.springframework.dao.DataIntegrityViolationException;
 import org.springframework.stereotype.Service;
+
 import telran.project.gardenshop.entity.Order;
 import telran.project.gardenshop.entity.Payment;
 import telran.project.gardenshop.enums.PaymentStatus;
@@ -11,6 +13,7 @@
 import telran.project.gardenshop.exception.PaymentNotFoundException;
 import telran.project.gardenshop.repository.PaymentRepository;
 import telran.project.gardenshop.exception.PaymentAlreadyExistsException;
+
 import java.time.LocalDateTime;
 import java.util.List;
 import java.util.Optional;
@@ -26,7 +29,7 @@
 
     private Payment findPaymentOrThrow(Long id) {
         return paymentRepository.findById(id)
-            .orElseThrow(() -> new PaymentNotFoundException("Payment not found with id: " + id));
+                .orElseThrow(() -> new PaymentNotFoundException("Payment not found with id: " + id));
     }
 
     @Override
@@ -82,10 +85,10 @@
     @Override
     public Optional<Payment> updatePaymentStatusByOrderId(Long orderId, PaymentStatus status) {
         return paymentRepository.findByOrderId(orderId)
-            .map(payment -> {
-                payment.setStatus(status);
-                payment.setUpdatedAt(LocalDateTime.now());
-                return paymentRepository.save(payment);
-            });
+                .map(payment -> {
+                    payment.setStatus(status);
+                    payment.setUpdatedAt(LocalDateTime.now());
+                    return paymentRepository.save(payment);
+                });
     }
 }
Index: src/main/java/telran/project/gardenshop/service/PaymentService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/service/PaymentService.java b/src/main/java/telran/project/gardenshop/service/PaymentService.java
--- a/src/main/java/telran/project/gardenshop/service/PaymentService.java	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ b/src/main/java/telran/project/gardenshop/service/PaymentService.java	(date 1755078351946)
@@ -2,6 +2,7 @@
 
 import java.util.List;
 import java.util.Optional;
+
 import telran.project.gardenshop.entity.Payment;
 import telran.project.gardenshop.enums.PaymentMethod;
 import telran.project.gardenshop.enums.PaymentStatus;
@@ -21,4 +22,4 @@
     boolean isPaymentStatus(Long orderId, PaymentStatus status);
 
     Optional<Payment> updatePaymentStatusByOrderId(Long orderId, PaymentStatus status);
-}
\ No newline at end of file
+}
Index: src/main/java/telran/project/gardenshop/entity/Payment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/entity/Payment.java b/src/main/java/telran/project/gardenshop/entity/Payment.java
--- a/src/main/java/telran/project/gardenshop/entity/Payment.java	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ b/src/main/java/telran/project/gardenshop/entity/Payment.java	(date 1755075782182)
@@ -2,6 +2,11 @@
 
 import jakarta.persistence.*;
 import lombok.*;
+
+import org.hibernate.annotations.CreationTimestamp;
+
+import org.hibernate.annotations.UpdateTimestamp;
+
 import telran.project.gardenshop.enums.PaymentMethod;
 import telran.project.gardenshop.enums.PaymentStatus;
 import java.time.LocalDateTime;
@@ -36,19 +41,10 @@
     private PaymentMethod method;
 
     @Column(nullable = false)
+    @CreationTimestamp
     private LocalDateTime createdAt;
 
     @Column
+    @UpdateTimestamp
     private LocalDateTime updatedAt;
-
-    @PrePersist
-    public void onPrePersist() {
-        this.createdAt = LocalDateTime.now();
-        this.updatedAt = LocalDateTime.now();
-    }
-
-    @PreUpdate
-    public void onPreUpdate() {
-        this.updatedAt = LocalDateTime.now();
-    }
-}
\ No newline at end of file
+}
Index: src/main/java/telran/project/gardenshop/entity/CartItem.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/entity/CartItem.java b/src/main/java/telran/project/gardenshop/entity/CartItem.java
--- a/src/main/java/telran/project/gardenshop/entity/CartItem.java	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ b/src/main/java/telran/project/gardenshop/entity/CartItem.java	(date 1755075782170)
@@ -9,19 +9,12 @@
 @AllArgsConstructor
 @Data
 @Builder
-
 public class CartItem {
 
         @Id
         @GeneratedValue(strategy = GenerationType.IDENTITY)
         private Long id;
 
-        @ManyToOne(fetch = FetchType.LAZY)
-        @JoinColumn(name = "cart_id", nullable = false)
-        @ToString.Exclude
-        @EqualsAndHashCode.Exclude
-        private Cart cart;
-
         @ManyToOne(fetch = FetchType.LAZY, optional = false)
         @JoinColumn(name = "product_id", nullable = false)
         private Product product;
Index: src/main/java/telran/project/gardenshop/entity/Cart.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/entity/Cart.java b/src/main/java/telran/project/gardenshop/entity/Cart.java
--- a/src/main/java/telran/project/gardenshop/entity/Cart.java	(revision 9c83d57329a250b4a6366f4cb14cb6cccf9fb5ea)
+++ b/src/main/java/telran/project/gardenshop/entity/Cart.java	(date 1755073137562)
@@ -23,8 +23,10 @@
     @JoinColumn(name = "user_id", nullable = false, unique = true)
     private User user;
 
-    @OneToMany(mappedBy = "cart", cascade = CascadeType.ALL, orphanRemoval = true)
+    @OneToMany(cascade = CascadeType.ALL, orphanRemoval = true)
+    @JoinColumn(name = "cart_id")
     @ToString.Exclude
     @EqualsAndHashCode.Exclude
+    @Builder.Default
     private List<CartItem> items = new ArrayList<>();
 }
