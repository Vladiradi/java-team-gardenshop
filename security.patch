Subject: [PATCH] security
---
Index: src/main/java/telran/project/gardenshop/configuration/SecurityConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/configuration/SecurityConfig.java b/src/main/java/telran/project/gardenshop/configuration/SecurityConfig.java
--- a/src/main/java/telran/project/gardenshop/configuration/SecurityConfig.java	(revision 5bcf1a9fe3531ba412031c2d41c09866431542e5)
+++ b/src/main/java/telran/project/gardenshop/configuration/SecurityConfig.java	(date 1752230363702)
@@ -2,8 +2,10 @@
 
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
+import org.springframework.security.config.Customizer;
 import org.springframework.security.config.annotation.web.builders.HttpSecurity;
 import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
+import org.springframework.security.config.http.SessionCreationPolicy;
 import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
 import org.springframework.security.crypto.password.PasswordEncoder;
 import org.springframework.security.web.SecurityFilterChain;
@@ -15,17 +17,20 @@
     @Bean
     public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {
         http
-            .csrf(csrf -> csrf.disable())
-            .authorizeHttpRequests(auth -> auth
-                .requestMatchers(
-                                    "/v3/api-docs/**",
-                                    "/swagger-ui/**",
-                                    "/swagger-ui.html",
-                                    "/swagger-resources/**",
-                                    "/webjars/**"
-                            ).permitAll()
-                .anyRequest().permitAll()
-            );
+                .csrf(csrf -> csrf.disable())
+                .authorizeHttpRequests(auth -> auth
+                        .requestMatchers(
+                                "/v3/api-docs/**",
+                                "/swagger-ui/**",
+                                "/swagger-ui.html",
+                                "/swagger-resources/**",
+                                "/webjars/**"
+                        ).permitAll()
+                        .requestMatchers("/api/categories").authenticated()
+                        .anyRequest().permitAll())
+                .httpBasic(Customizer.withDefaults())
+                .sessionManagement(session ->
+                        session.sessionCreationPolicy(SessionCreationPolicy.STATELESS));
         return http.build();
     }
 
Index: src/main/java/telran/project/gardenshop/service/UserServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/service/UserServiceImpl.java b/src/main/java/telran/project/gardenshop/service/UserServiceImpl.java
--- a/src/main/java/telran/project/gardenshop/service/UserServiceImpl.java	(revision 5bcf1a9fe3531ba412031c2d41c09866431542e5)
+++ b/src/main/java/telran/project/gardenshop/service/UserServiceImpl.java	(date 1752231148644)
@@ -1,6 +1,7 @@
 package telran.project.gardenshop.service;
 
 import lombok.RequiredArgsConstructor;
+import org.springframework.security.core.context.SecurityContextHolder;
 import org.springframework.security.crypto.password.PasswordEncoder;
 import org.springframework.stereotype.Service;
 import telran.project.gardenshop.dto.UserEditDto;
@@ -12,6 +13,7 @@
 import telran.project.gardenshop.repository.UserRepository;
 
 import java.util.List;
+import java.util.Optional;
 
 @Service
 @RequiredArgsConstructor
@@ -19,14 +21,14 @@
 
     private final UserRepository userRepository;
 
-    private final PasswordEncoder passwordEncoder;
+    //private final PasswordEncoder passwordEncoder;
     private final UserMapper userMapper;
 
     @Override
     public User createUser(User user) {
         emailCheck(user.getEmail());
         user.setRole(Role.USER);
-        user.setPassword(passwordEncoder.encode(user.getPassword()));
+//        user.setPassword(passwordEncoder.encode(user.getPassword()));
         return userRepository.save(user);
     }
 
@@ -41,6 +43,11 @@
         return userRepository.findAll();
     }
 
+    @Override
+    public User updateUser(Long id, User updated) {
+        return null;
+    }
+
     @Override
 
     public User updateUser(Long id, UserEditDto dto) {
@@ -52,7 +59,7 @@
         }
 
         userMapper.updateUserFromDto(dto, user);
-        user.setPassword(passwordEncoder.encode(dto.getPassword()));
+       // user.setPassword(passwordEncoder.encode(dto.getPassword()));
 
         return userRepository.save(user);
     }
@@ -63,6 +70,16 @@
         userRepository.delete(user);
     }
 
+    @Override
+    public Optional<User> getUserByEmail(String email) {
+        return userRepository.findByEmail(email);
+    }
+
+    @Override
+    public User getCurrentUser() {
+        return (User) SecurityContextHolder.getContext().getAuthentication().getPrincipal();
+    }
+
     private void emailCheck(String email) {
         if (userRepository.findByEmail(email).isPresent()) {
             throw new UserWithEmailAlreadyExistsException("User with email " + email + " already exists");
Index: src/main/java/telran/project/gardenshop/service/security/UserDetailsServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/service/security/UserDetailsServiceImpl.java b/src/main/java/telran/project/gardenshop/service/security/UserDetailsServiceImpl.java
new file mode 100644
--- /dev/null	(date 1752230399217)
+++ b/src/main/java/telran/project/gardenshop/service/security/UserDetailsServiceImpl.java	(date 1752230399217)
@@ -0,0 +1,43 @@
+package telran.project.gardenshop.service.security;
+
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.security.core.authority.SimpleGrantedAuthority;
+import org.springframework.security.core.userdetails.UserDetails;
+import org.springframework.security.core.userdetails.UserDetailsService;
+import org.springframework.security.core.userdetails.UsernameNotFoundException;
+import org.springframework.stereotype.Service;
+import telran.project.gardenshop.entity.User;
+import telran.project.gardenshop.service.UserService;
+
+import java.util.Collections;
+
+@Service
+public class UserDetailsServiceImpl implements UserDetailsService {
+
+    @Autowired
+    private UserService userService;
+
+    @Override
+    public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {
+        User user = userService.getUserByEmail(username)
+                .orElseThrow(() -> new UsernameNotFoundException(username));
+
+        ///input - >  username - email
+        /// output - > User(email, password, Roles)
+        org.springframework.security.core.userdetails.User springUser = new org.springframework.security.core.userdetails.User(
+                user.getEmail(),
+                user.getPassword() //jxgkjhsdjkfhsdkshgkjshgkjfhgjkdhgkjdfghjdfghjghkfjghdjkgh
+                , Collections.singleton(new SimpleGrantedAuthority(user.getRole().name())));
+
+        return springUser;
+
+        /// UI -> alex@gmail.com , 12345
+        /// DB -> alex@gmail.com , sdmfngjkdfhgjkdfhgsdkfjghsdfkgjhdsfkgjhsfdkgjhfdkghdfkghdfgkhgk
+        /// Spring alex@gmail.com -> alex@gmail.com
+
+        /// Spring -> 12345 ->  sdmfngjkdfhgjkdfhgsdkfjghsdfkgjhdsfkgjhsfdkgjhfdkghdfkghdfgkhgk
+        /// Spring -> sdmfngjkdfhgjkdfhgsdkfjghsdfkgjhdsfkgjhsfdkgjhfdkghdfkghdfgkhgk ,
+        ///           sdmfngjkdfhgjkdfhgsdkfjghsdfkgjhdsfkgjhsfdkgjhfdkghdfkghdfgkhgk
+
+    }
+}
\ No newline at end of file
Index: src/main/resources/application-dev.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/src/main/resources/application-dev.properties b/src/main/resources/application-dev.properties
new file mode 100644
--- /dev/null	(date 1752228945796)
+++ b/src/main/resources/application-dev.properties	(date 1752228945796)
@@ -0,0 +1,18 @@
+# --- Server Settings ---
+server.port=8082
+spring.application.name=gardenShop
+
+spring.datasource.url=jdbc:mysql://localhost:3306/gardenshop
+spring.datasource.username=root
+spring.datasource.password=rootroot
+
+# --- Hibernate ---
+#spring.jpa.hibernate.ddl-auto=none
+#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
+
+# --- Liquibase ---
+spring.liquibase.enabled=true
+spring.liquibase.change-log=classpath:/db/db.changelog-master.xml
+
+# --- SQL init disabled ---
+spring.sql.init.mode=never
\ No newline at end of file
Index: src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/src/main/resources/application.properties b/src/main/resources/application.properties
--- a/src/main/resources/application.properties	(revision 5bcf1a9fe3531ba412031c2d41c09866431542e5)
+++ b/src/main/resources/application.properties	(date 1752230142893)
@@ -1,6 +1,7 @@
 # --- Server Settings ---
 server.port=8082
 spring.application.name=gardenShop
+spring.profiles.active=dev
 
 # --- PostgreSQL Database Settings ---
 spring.datasource.url=jdbc:postgresql://localhost:5432/gardenshop
@@ -16,4 +17,6 @@
 spring.liquibase.change-log=classpath:/db/db.changelog-master.xml
 
 # --- SQL init disabled ---
-spring.sql.init.mode=never
\ No newline at end of file
+spring.sql.init.mode=never
+
+logging.level.root =debug
\ No newline at end of file
Index: src/main/java/telran/project/gardenshop/service/UserService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/service/UserService.java b/src/main/java/telran/project/gardenshop/service/UserService.java
--- a/src/main/java/telran/project/gardenshop/service/UserService.java	(revision 5bcf1a9fe3531ba412031c2d41c09866431542e5)
+++ b/src/main/java/telran/project/gardenshop/service/UserService.java	(date 1752230777287)
@@ -4,16 +4,22 @@
 import telran.project.gardenshop.entity.User;
 
 import java.util.List;
+import java.util.Optional;
 
 public interface UserService {
-
     User createUser(User user);
 
     User getUserById(Long id);
 
     List<User> getAllUsers();
-  
-    User updateUser(Long id, UserEditDto dto);
-  
+
+    User updateUser(Long id, User updated);
+
     void deleteUser(Long id);
+
+    User updateUser(Long id, UserEditDto dto);
+
+    Optional<User> getUserByEmail(String email);
+
+    User getCurrentUser();
 }
\ No newline at end of file
Index: src/main/resources/db/changelog/db.changelog-1.0-init.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/db/changelog/db.changelog-1.0-init.xml b/src/main/resources/db/changelog/db.changelog-1.0-init.xml
--- a/src/main/resources/db/changelog/db.changelog-1.0-init.xml	(revision 5bcf1a9fe3531ba412031c2d41c09866431542e5)
+++ b/src/main/resources/db/changelog/db.changelog-1.0-init.xml	(date 1752229885101)
@@ -120,4 +120,11 @@
                 onDelete="CASCADE"/>
     </changeSet>
 
+    <changeSet id="1752229816567-1" author="anna">
+        <comment>add discount price</comment>
+        <addColumn tableName="products">
+            <column name="discount_price" type="decimal"/>
+        </addColumn>
+    </changeSet>
+
 </databaseChangeLog>
\ No newline at end of file
Index: src/main/java/telran/project/gardenshop/entity/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/entity/User.java b/src/main/java/telran/project/gardenshop/entity/User.java
--- a/src/main/java/telran/project/gardenshop/entity/User.java	(revision 5bcf1a9fe3531ba412031c2d41c09866431542e5)
+++ b/src/main/java/telran/project/gardenshop/entity/User.java	(date 1752229446726)
@@ -17,6 +17,7 @@
 @EqualsAndHashCode(onlyExplicitlyIncluded = true)
 @ToString
 public class User {
+
     @Id
     @GeneratedValue(strategy = GenerationType.IDENTITY)
     @EqualsAndHashCode.Include
@@ -36,7 +37,7 @@
 
     @Enumerated(EnumType.STRING)
     @Column(nullable = false)
-    private Role role;
+    private Role role =  Role.USER;
 
     @OneToMany(mappedBy = "user", cascade = CascadeType.ALL, orphanRemoval = true)
     @JsonManagedReference
Index: src/main/java/telran/project/gardenshop/dto/UserRequestDto.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/dto/UserRequestDto.java b/src/main/java/telran/project/gardenshop/dto/UserRequestDto.java
--- a/src/main/java/telran/project/gardenshop/dto/UserRequestDto.java	(revision 5bcf1a9fe3531ba412031c2d41c09866431542e5)
+++ b/src/main/java/telran/project/gardenshop/dto/UserRequestDto.java	(date 1752229446720)
@@ -24,15 +24,15 @@
     )
     private String phoneNumber;
 
-    @NotNull(message = "Password must not be null")
-    @NotBlank(message = "Password must not be blank")
-    @Pattern(
-        regexp = "^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{5,}$",
-        message = "Password must be at least 5 characters and contain letters and digits"
-    )
+//    @NotNull(message = "Password must not be null")
+//    @NotBlank(message = "Password must not be blank")
+//    @Pattern(
+//        regexp = "^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{5,}$",
+//        message = "Password must be at least 5 characters and contain letters and digits"
+//    )
     private String password;
 
-    @NotNull(message = "Role must not be null (USER or ADMIN)")
-    @NotBlank(message = "Role must not be blank (USER or ADMIN)")
-    private String role;
+//    @NotNull(message = "Role must not be null (USER or ADMIN)")
+//    @NotBlank(message = "Role must not be blank (USER or ADMIN)")
+//    private String role;
 }
\ No newline at end of file
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
--- a/pom.xml	(revision 5bcf1a9fe3531ba412031c2d41c09866431542e5)
+++ b/pom.xml	(date 1752228945773)
@@ -47,6 +47,12 @@
             <scope>runtime</scope>
         </dependency>
 
+        <dependency>
+            <groupId>com.mysql</groupId>
+            <artifactId>mysql-connector-j</artifactId>
+            <version>9.2.0</version>
+        </dependency>
+
         <!-- Liquibase -->
         <dependency>
             <groupId>org.liquibase</groupId>
Index: src/main/java/telran/project/gardenshop/entity/Product.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/entity/Product.java b/src/main/java/telran/project/gardenshop/entity/Product.java
--- a/src/main/java/telran/project/gardenshop/entity/Product.java	(revision 5bcf1a9fe3531ba412031c2d41c09866431542e5)
+++ b/src/main/java/telran/project/gardenshop/entity/Product.java	(date 1752229885088)
@@ -30,7 +30,7 @@
     @Column(nullable = false)
     private Double price;
 
-    @Column(name = "discount_price")
+    //@Column(name = "discount_price")
     private Double discountPrice;
 
     @Column(name = "image_url")
Index: src/main/java/telran/project/gardenshop/controller/UserController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/telran/project/gardenshop/controller/UserController.java b/src/main/java/telran/project/gardenshop/controller/UserController.java
--- a/src/main/java/telran/project/gardenshop/controller/UserController.java	(revision 5bcf1a9fe3531ba412031c2d41c09866431542e5)
+++ b/src/main/java/telran/project/gardenshop/controller/UserController.java	(date 1752229292284)
@@ -5,6 +5,7 @@
 import jakarta.validation.Valid;
 import lombok.RequiredArgsConstructor;
 import org.springframework.http.ResponseEntity;
+import org.springframework.security.crypto.password.PasswordEncoder;
 import org.springframework.web.bind.annotation.*;
 import telran.project.gardenshop.dto.UserEditDto;
 import telran.project.gardenshop.dto.UserRequestDto;
@@ -22,11 +23,15 @@
 public class UserController {
 
     private final UserService userService;
+
     private final UserMapper userMapper;
 
+    private final PasswordEncoder passwordEncoder;
+
     @PostMapping
     @Operation(summary = "Create a new user")
     public ResponseEntity<UserResponseDto> create(@Valid @RequestBody UserRequestDto dto) {
+        dto.setPassword(passwordEncoder.encode(dto.getPassword()));
         User user = userMapper.toEntity(dto);
         User saved = userService.createUser(user);
         return ResponseEntity.status(201).body(userMapper.toDto(saved));
